name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry (Linux/macOS)
      if: runner.os != 'Windows'
      run: curl -sSL https://install.python-poetry.org | python3 -
    - name: Install Poetry (Windows)
      if: runner.os == 'Windows'
      run: (Invoke-WebRequest -Uri https://install.python-poetry.org -UseBasicParsing).Content | py -
    - name: Add Poetry to PATH (macOS)
      if: runner.os == 'macOS'
      run: echo "/Users/runner/.local/bin" >> $GITHUB_PATH
    - name: Add Poetry to PATH (Windows)
      if: runner.os == 'Windows'
      run: echo "$env:APPDATA\Python\Scripts" | Out-File -Append -FilePath $env:GITHUB_PATH -Encoding utf8
    - name: Cache Dependencies
      uses: actions/cache@v2
      with:
        path: ~/.cache/pypoetry
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-
    - name: Install Dependencies
      run: poetry install
    - name: Run Tests
      run: poetry run pytest
